"use strict";(self.webpackChunkneoforged_docs=self.webpackChunkneoforged_docs||[]).push([[9603],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},p="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,h=p["".concat(s,".").concat(m)]||p[m]||k[m]||i;return n?o.createElement(h,r(r({ref:t},d),{},{components:n})):o.createElement(h,r({ref:t},d))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,r=new Array(i);r[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:a,r[1]=l;for(var c=2;c<i;c++)r[c]=n[c];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7010:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>k,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var o=n(7462),a=(n(7294),n(3905));const i={},r="Blocks",l={unversionedId:"blocks/index",id:"blocks/index",title:"Blocks",description:"Blocks are, obviously, essential to the Minecraft world. They make up all of the terrain, structures, and machines. Chances are if you are interested in making a mod, then you will want to add some blocks. This page will guide you through the creation of blocks, and some of the things you can do with them.",source:"@site/docs/blocks/index.md",sourceDirName:"blocks",slug:"/blocks/",permalink:"/docs/blocks/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"mainSidebar",previous:{title:"BlockEntityRenderer",permalink:"/docs/blockentities/ber"},next:{title:"Block States",permalink:"/docs/blocks/states"}},s={},c=[{value:"Creating a Block",id:"creating-a-block",level:2},{value:"Basic Blocks",id:"basic-blocks",level:3},{value:"Advanced Blocks",id:"advanced-blocks",level:3},{value:"Registering a Block",id:"registering-a-block",level:2},{value:"Optionally Registering Blocks",id:"optionally-registering-blocks",level:4},{value:"Further Reading",id:"further-reading",level:2}],d={toc:c},p="wrapper";function k(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"blocks"},"Blocks"),(0,a.kt)("p",null,"Blocks are, obviously, essential to the Minecraft world. They make up all of the terrain, structures, and machines. Chances are if you are interested in making a mod, then you will want to add some blocks. This page will guide you through the creation of blocks, and some of the things you can do with them."),(0,a.kt)("h2",{id:"creating-a-block"},"Creating a Block"),(0,a.kt)("h3",{id:"basic-blocks"},"Basic Blocks"),(0,a.kt)("p",null,"For simple blocks, which need no special functionality (think cobblestone, wooden planks, etc.), a custom class is not necessary. You can create a block by instantiating the ",(0,a.kt)("inlineCode",{parentName:"p"},"Block")," class with a ",(0,a.kt)("inlineCode",{parentName:"p"},"BlockBehaviour$Properties")," object. This ",(0,a.kt)("inlineCode",{parentName:"p"},"BlockBehaviour$Properties")," object can be made using ",(0,a.kt)("inlineCode",{parentName:"p"},"BlockBehaviour$Properties#of"),", and it can be customized by calling its methods. For instance:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"strength")," - The hardness controls the time it takes to break the block. It is an arbitrary value. For reference, stone has a hardness of 1.5, and dirt 0.5. If the block should be unbreakable a hardness of -1.0 should be used, see the definition of ",(0,a.kt)("inlineCode",{parentName:"li"},"Blocks#BEDROCK")," as an example. The resistance controls the explosion resistance of the block. For reference, stone has a resistance of 6.0, and dirt 0.5."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"sound")," - Controls the sound the block makes when it is punched, broken, or placed. Requires a ",(0,a.kt)("inlineCode",{parentName:"li"},"SoundType")," argument, see the ",(0,a.kt)("a",{parentName:"li",href:"/docs/gameeffects/sounds"},"sounds")," page for more details."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"lightLevel")," - Controls the light emission of the block. Takes a function with a ",(0,a.kt)("inlineCode",{parentName:"li"},"BlockState")," parameter that returns a value from zero to fifteen."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"friction")," - Controls how slippery the block is. For reference, ice has a slipperiness of 0.98.")),(0,a.kt)("p",null,"All these methods are ",(0,a.kt)("em",{parentName:"p"},"chainable")," which means you can call them in series. See the ",(0,a.kt)("inlineCode",{parentName:"p"},"Blocks")," class for examples of this."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Blocks have no setter for their ",(0,a.kt)("inlineCode",{parentName:"p"},"CreativeModeTab"),". This is handled by the ",(0,a.kt)("a",{parentName:"p",href:"/docs/items/#creative-tabs"},(0,a.kt)("inlineCode",{parentName:"a"},"BuildCreativeModeTabContentsEvent"))," if the block has an associated item (e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"BlockItem"),"). Furthermore, there is no setter for translation key of the block as it is generated from the registry name via ",(0,a.kt)("inlineCode",{parentName:"p"},"Block#getDescriptionId"),".")),(0,a.kt)("h3",{id:"advanced-blocks"},"Advanced Blocks"),(0,a.kt)("p",null,"Of course, the above only allows for extremely basic blocks. If you want to add functionality, like player interaction, a custom class is required. However, the ",(0,a.kt)("inlineCode",{parentName:"p"},"Block")," class has many methods and unfortunately not every single one can be documented here. See the rest of the pages in this section for things you can do with blocks."),(0,a.kt)("h2",{id:"registering-a-block"},"Registering a Block"),(0,a.kt)("p",null,"Blocks must be ",(0,a.kt)("a",{parentName:"p",href:"/docs/concepts/registries#methods-for-registering"},"registered")," to function."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},'A block in the level and a "block" in an inventory are very different things. A block in the level is represented by an ',(0,a.kt)("inlineCode",{parentName:"p"},"BlockState"),", and its behavior defined by an instance of ",(0,a.kt)("inlineCode",{parentName:"p"},"Block"),". Meanwhile, an item in an inventory is an ",(0,a.kt)("inlineCode",{parentName:"p"},"ItemStack"),", controlled by an ",(0,a.kt)("inlineCode",{parentName:"p"},"Item"),". As a bridge between the different worlds of ",(0,a.kt)("inlineCode",{parentName:"p"},"Block")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"Item"),", there exists the class ",(0,a.kt)("inlineCode",{parentName:"p"},"BlockItem"),". ",(0,a.kt)("inlineCode",{parentName:"p"},"BlockItem")," is a subclass of ",(0,a.kt)("inlineCode",{parentName:"p"},"Item")," that has a field ",(0,a.kt)("inlineCode",{parentName:"p"},"block")," that holds a reference to the ",(0,a.kt)("inlineCode",{parentName:"p"},"Block")," it represents. ",(0,a.kt)("inlineCode",{parentName:"p"},"BlockItem"),' defines some of the behavior of a "block" as an item, like how a right click places the block. It\'s possible to have a ',(0,a.kt)("inlineCode",{parentName:"p"},"Block")," without an ",(0,a.kt)("inlineCode",{parentName:"p"},"BlockItem"),". (E.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"minecraft:water")," exists a block, but not an item. It is therefore impossible to hold it in an inventory as one.)"),(0,a.kt)("p",{parentName:"admonition"},"When a block is registered, ",(0,a.kt)("em",{parentName:"p"},"only")," a block is registered. The block does not automatically have an ",(0,a.kt)("inlineCode",{parentName:"p"},"BlockItem"),". To create a basic ",(0,a.kt)("inlineCode",{parentName:"p"},"BlockItem")," for a block, one should set the registry name of the ",(0,a.kt)("inlineCode",{parentName:"p"},"BlockItem")," to that of its ",(0,a.kt)("inlineCode",{parentName:"p"},"Block"),". Custom subclasses of ",(0,a.kt)("inlineCode",{parentName:"p"},"BlockItem")," may be used as well. Once an ",(0,a.kt)("inlineCode",{parentName:"p"},"BlockItem")," has been registered for a block, ",(0,a.kt)("inlineCode",{parentName:"p"},"Block#asItem")," can be used to retrieve it. ",(0,a.kt)("inlineCode",{parentName:"p"},"Block#asItem")," will return ",(0,a.kt)("inlineCode",{parentName:"p"},"Items#AIR")," if there is no ",(0,a.kt)("inlineCode",{parentName:"p"},"BlockItem")," for the ",(0,a.kt)("inlineCode",{parentName:"p"},"Block"),", so if you are not certain that there is an ",(0,a.kt)("inlineCode",{parentName:"p"},"BlockItem")," for the ",(0,a.kt)("inlineCode",{parentName:"p"},"Block")," you are using, check for if ",(0,a.kt)("inlineCode",{parentName:"p"},"Block#asItem")," returns ",(0,a.kt)("inlineCode",{parentName:"p"},"Items#AIR"),".")),(0,a.kt)("h4",{id:"optionally-registering-blocks"},"Optionally Registering Blocks"),(0,a.kt)("p",null,"In the past there have been several mods that have allowed users to disable blocks/items in a configuration file. However, you shouldn't do this. There is no limit on the amount of blocks that can be register, so register all blocks in your mod! If you want a block to be disabled through a configuration file, you should disable the crafting recipe. If you would like to disable the block in the creative tab, use a ",(0,a.kt)("inlineCode",{parentName:"p"},"FeatureFlag")," when building the contents within ",(0,a.kt)("a",{parentName:"p",href:"/docs/items/#creative-tabs"},(0,a.kt)("inlineCode",{parentName:"a"},"BuildCreativeModeTabContentsEvent")),"."),(0,a.kt)("h2",{id:"further-reading"},"Further Reading"),(0,a.kt)("p",null,"For information about block properties, such as those used for vanilla blocks like fences, walls, and many more, see the section on ",(0,a.kt)("a",{parentName:"p",href:"/docs/blocks/states"},"blockstates"),"."))}k.isMDXComponent=!0}}]);