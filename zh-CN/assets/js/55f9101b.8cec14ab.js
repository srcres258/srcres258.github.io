"use strict";(self.webpackChunkneoforged_docs=self.webpackChunkneoforged_docs||[]).push([[8407],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>u});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function d(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),s=l(t),f=i,u=s["".concat(c,".").concat(f)]||s[f]||m[f]||a;return t?r.createElement(u,o(o({ref:n},p),{},{components:t})):r.createElement(u,o({ref:n},p))}));function u(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=f;var d={};for(var c in n)hasOwnProperty.call(n,c)&&(d[c]=n[c]);d.originalType=e,d[s]="string"==typeof e?e:i,o[1]=d;for(var l=2;l<a;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},2914:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>d,toc:()=>l});var r=t(7462),i=(t(7294),t(3905));const a={},o="Dependencies",d={unversionedId:"docs/dependencies/index",id:"docs/dependencies/index",title:"Dependencies",description:"Dependencies are not only used to develop interoperability between mods or add additional libraries to the game, but it also determines what version of Minecraft to develop for. This will provide a quick overview on how to modify the repositories and dependencies block to add dependencies to your development environment.",source:"@site/neogradle/docs/dependencies/index.md",sourceDirName:"docs/dependencies",slug:"/docs/dependencies/",permalink:"/zh-CN/neogradle/docs/dependencies/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"ngSidebar",previous:{title:"Run Configurations",permalink:"/zh-CN/neogradle/docs/configuration/runs"},next:{title:"Jar-in-Jar",permalink:"/zh-CN/neogradle/docs/dependencies/jarinjar"}},c={},l=[{value:"<code>minecraft</code>",id:"minecraft",level:2},{value:"Mod Dependencies",id:"mod-dependencies",level:2},{value:"Local Mod Dependencies",id:"local-mod-dependencies",level:3},{value:"Non-Minecraft Dependencies",id:"non-minecraft-dependencies",level:2}],p={toc:l},s="wrapper";function m(e){let{components:n,...t}=e;return(0,i.kt)(s,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"dependencies"},"Dependencies"),(0,i.kt)("p",null,"Dependencies are not only used to develop interoperability between mods or add additional libraries to the game, but it also determines what version of Minecraft to develop for. This will provide a quick overview on how to modify the ",(0,i.kt)("inlineCode",{parentName:"p"},"repositories")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"dependencies")," block to add dependencies to your development environment."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"This will not explain Gradle concepts in depth. It is highly recommended to read the ",(0,i.kt)("a",{parentName:"p",href:"https://docs.gradle.org/8.1.1/userguide/dependency_management.html"},"Gradle Dependency Management guide")," before continuing.")),(0,i.kt)("h2",{id:"minecraft"},(0,i.kt)("inlineCode",{parentName:"h2"},"minecraft")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"minecraft")," dependency specifies the version of Minecraft to use and must be included in the ",(0,i.kt)("inlineCode",{parentName:"p"},"dependencies")," block. Any artifact, except artifacts which have the group ",(0,i.kt)("inlineCode",{parentName:"p"},"net.minecraft"),", will apply any patches provided with the dependency. This typically only specifies the ",(0,i.kt)("inlineCode",{parentName:"p"},"net.minecraftforge:forge")," artifact."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gradle"},"dependencies {\n    // Version of Forge artifact is in the form '<mc_version>-<forge_version>'\n    // 'mc_version' is the version of Minecraft to load (e.g., 1.19.4)\n    // 'forge_version' is the version of Forge wanted for that Minecraft version (e.g., 45.0.23)\n    // Vanilla can be compiled against using 'net.minecraft:joined:<mc_version>' instead\n    minecraft 'net.minecraftforge:forge:1.19.4-45.0.23'\n}\n")),(0,i.kt)("h2",{id:"mod-dependencies"},"Mod Dependencies"),(0,i.kt)("p",null,"In a typical development environment, Minecraft is deobfuscated to intermediate mappings, used in production, and then transformed into whatever ",(0,i.kt)("a",{parentName:"p",href:"/zh-CN/neogradle/docs/configuration/#human-readable-mappings"},"human-readable mappings")," the modder specified. Mod artifacts, when built, are obfuscated to production mappings (SRG), and as such, are unable to be used directly as a Gradle dependency."),(0,i.kt)("p",null,"As such, all mod dependencies need to be wrapped with ",(0,i.kt)("inlineCode",{parentName:"p"},"fg.deobf")," before being added to the intended configuration."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gradle"},"dependencies {\n    // Assume we have already specified the 'minecraft' dependency\n\n    // Assume we have some artifact 'examplemod' that can be obtained from a specified repository\n    implementation fg.deobf('com.example:examplemod:1.0')\n}\n")),(0,i.kt)("h3",{id:"local-mod-dependencies"},"Local Mod Dependencies"),(0,i.kt)("p",null,"If the mod you are trying to depend on is not available on a maven repository (e.g., ",(0,i.kt)("a",{parentName:"p",href:"https://central.sonatype.com/"},"Maven Central"),", ",(0,i.kt)("a",{parentName:"p",href:"https://cursemaven.com/"},"CurseMaven"),", ",(0,i.kt)("a",{parentName:"p",href:"https://docs.modrinth.com/docs/tutorials/maven/"},"Modrinth"),"), you can add a mod dependency using a ","[flat directory]"," instead:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gradle"},"repositories {\n    // Adds the 'libs' folder in the project directory as a flat directory\n    flatDir {\n        dir 'libs'\n    }\n}\n\ndependencies {\n    // ...\n\n    // Given some <group>:<name>:<version>:<classifier (default None)>\n    //   with an extension <ext (default jar)>\n    // Artifacts in flat directories will be resolved in the following order:\n    // - <name>-<version>.<ext>\n    // - <name>-<version>-<classifier>.<ext>\n    // - <name>.<ext>\n    // - <name>-<classifier>.<ext>\n\n    // If a classifier is explicitly specified\n    //  artifacts with the classifier will take priority:\n    // - examplemod-1.0-api.jar\n    // - examplemod-api.jar\n    // - examplemod-1.0.jar\n    // - examplemod.jar\n    implementation fg.deobf('com.example:examplemod:1.0:api')\n}\n")),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"The group name can be anything but must not be empty for flat directory entries as they are not checked when resolving the artifact file.")),(0,i.kt)("h2",{id:"non-minecraft-dependencies"},"Non-Minecraft Dependencies"),(0,i.kt)("p",null,"Non-Minecraft dependencies are not loaded by Forge by default in the development environment. To get Forge to recognize the non-Minecraft dependency, they must be added to the ",(0,i.kt)("inlineCode",{parentName:"p"},"minecraftLibrary")," configuration. ",(0,i.kt)("inlineCode",{parentName:"p"},"minecraftLibrary")," works similarly to the ",(0,i.kt)("inlineCode",{parentName:"p"},"implementation")," configuration within Gradle, being applied during compile time and runtime."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gradle"},"dependencies {\n    // ...\n\n    // Assume there is some non-Minecraft library 'dummy-lib'\n    minecraftLibrary 'com.dummy:dummy-lib:1.0'\n}\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Non-Minecraft dependencies added to the development environment will not be included in built artifact by default! You must use ",(0,i.kt)("a",{parentName:"p",href:"/zh-CN/neogradle/docs/dependencies/jarinjar"},"Jar-In-Jar")," to include the dependencies within the artifact on build.")))}m.isMDXComponent=!0}}]);